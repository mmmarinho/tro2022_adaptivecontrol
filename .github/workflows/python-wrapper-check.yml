name: Check Python Wrapper

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-22.04', 'macos-latest']
        python-version: [3.9, '3.10', '3.11', '3.12', '3.13']

    permissions:
      id-token: write

    steps:
    - uses: actions/checkout@v3
    - name: init submodules
      run: git submodule update --init --recursive
    - name: Set up Python ${{ matrix.python-version }} (Github Hosted VMs)
      if: matrix.os != 'linux-arm64'
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Make test executable
      run: |
       chmod +x test_python_wrapper.sh
    - name: build
      run: |
        ./test_python_wrapper.sh
        cd python_wrapper
        python3 setup.py bdist_wheel
        cd ..

    - name: Rename wheel (MacOS only)
      if: matrix.os == 'macos-latest'
      run: |
        brew install rename
        cd python_wrapper/dist
        sw_vers
        rename 's/11_0/10_14/' *
        rename 's/12_0/10_15/' *
        rename 's/universal2/arm64/' *
        cd ..
        cd ..
    - name: Rename wheel (Ubuntu Only)
      if: matrix.os == 'ubuntu-22.04'
      run: |
        sudo apt install rename
        cd python_wrapper/dist
        ls -lah
        rename 's/linux/manylinux1/' *
        cd ..
        cd ..
    - name: Publish to PyPi
      env:
        TWINE_USERNAME: '__token__'
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      if: github.ref == 'refs/heads/master'
      run: |
        python -m pip install twine
        twine upload dist/*


